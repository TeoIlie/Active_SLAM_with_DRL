diff --git a/cisc856_ws/src/PIC4rl_gym/gazebo_sim/launch/simulation.launch.py b/cisc856_ws/src/PIC4rl_gym/gazebo_sim/launch/simulation.launch.py
index a63d9dc..3234f99 100644
--- a/cisc856_ws/src/PIC4rl_gym/gazebo_sim/launch/simulation.launch.py
+++ b/cisc856_ws/src/PIC4rl_gym/gazebo_sim/launch/simulation.launch.py
@@ -75,7 +75,7 @@ def generate_launch_description():
     gazebo = launch.actions.ExecuteProcess(
         cmd=['gazebo','--verbose', world_path, '-s','libgazebo_ros_init.so','-s','libgazebo_ros_factory.so'],
         output='screen'
-        )
+        ) # set cmd=['gzserver',... for headless
     
     return launch.LaunchDescription([
         use_sim_time_arg,
diff --git a/cisc856_ws/src/PIC4rl_gym/gazebo_sim/worlds/empty.world b/cisc856_ws/src/PIC4rl_gym/gazebo_sim/worlds/empty.world
index 2387947..9de5252 100644
--- a/cisc856_ws/src/PIC4rl_gym/gazebo_sim/worlds/empty.world
+++ b/cisc856_ws/src/PIC4rl_gym/gazebo_sim/worlds/empty.world
@@ -15,7 +15,7 @@
           <geometry>
             <plane>
               <normal>0 0 1</normal>
-              <size>100 100</size>
+              <size>50 50</size>
             </plane>
           </geometry>
           <surface>
@@ -41,7 +41,7 @@
           <geometry>
             <plane>
               <normal>0 0 1</normal>
-              <size>100 100</size>
+              <size>50 50</size>
             </plane>
           </geometry>
           <material>
@@ -134,7 +134,7 @@
           <pose>0 0 0.25 0 -0 0</pose>
           <geometry>
             <box>
-              <size>20 0.25 2</size>
+              <size>10 0.25 2</size>
             </box>
           </geometry>
           <material>
@@ -176,7 +176,7 @@
           <pose>0 0 0.25 0 -0 0</pose>
           <geometry>
             <box>
-              <size>20 0.25 2</size>
+              <size>10 0.25 2</size>
             </box>
           </geometry>
           <material>
diff --git a/cisc856_ws/src/PIC4rl_gym/pic4rl/config/main_params.yaml b/cisc856_ws/src/PIC4rl_gym/pic4rl/config/main_params.yaml
index 2954ef5..25ef08e 100644
--- a/cisc856_ws/src/PIC4rl_gym/pic4rl/config/main_params.yaml
+++ b/cisc856_ws/src/PIC4rl_gym/pic4rl/config/main_params.yaml
@@ -4,7 +4,7 @@ main_node:
     mode: "training" # Training or testing
     # Robot parameters
     robot_name: "jackal_ugv" # robot entity name in gazebo
-    max_lin_vel: 0.5
+    max_lin_vel: 2.0
     min_lin_vel: 0.0
     max_ang_vel: 1.0
     min_ang_vel: -1.0
@@ -16,8 +16,8 @@ main_node:
     goal_tolerance: 0.40
 
     # World parameters
-    world_name: "new_indoor.world" # Leave empty to obtain no world
-    data_path: "training/new_indoor.json" # Indicate a goals and poses json file from goals_and_poses folder
+    world_name: "tiny.world" # Leave empty to obtain no world
+    data_path: "training/tiny.json" # Indicate a goals and poses json file from goals_and_poses folder
 
     # Task parameters
     task: 'goToPose' # goToPose, Following, Vineyards
diff --git a/cisc856_ws/src/PIC4rl_gym/pic4rl/pic4rl/tasks/goToPose/pic4rl_environment_lidar.py b/cisc856_ws/src/PIC4rl_gym/pic4rl/pic4rl/tasks/goToPose/pic4rl_environment_lidar.py
index 3538e33..2f167b1 100644
--- a/cisc856_ws/src/PIC4rl_gym/pic4rl/pic4rl/tasks/goToPose/pic4rl_environment_lidar.py
+++ b/cisc856_ws/src/PIC4rl_gym/pic4rl/pic4rl/tasks/goToPose/pic4rl_environment_lidar.py
@@ -339,10 +339,10 @@ class Pic4rlEnvironmentLidar(Node):
         if self.episode % self.change_episode == 0.0 or self.evaluate:
             self.index = int(np.random.uniform() * len(self.poses)) - 1
 
-        self.get_logger().debug("Respawing robot ...")
+        self.get_logger().debug("Respawning robot ...")
         self.respawn_robot(self.index)
 
-        self.get_logger().debug("Respawing goal ...")
+        self.get_logger().debug("Respawning goal ...")
         self.respawn_goal(self.index)
 
         self.get_logger().debug("Environment reset performed ...")
@@ -385,7 +385,7 @@ class Pic4rlEnvironmentLidar(Node):
         if self.episode <= self.starting_episodes:
             x, y, yaw = tuple(self.initial_pose)
         else:
-            x, y, yaw = tuple(self.poses[index])
+            x, y, yaw = tuple(self.initial_pose) #TODO change back
 
         qz = np.sin(yaw / 2)
         qw = np.cos(yaw / 2)
